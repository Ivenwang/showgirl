// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ImageSvr.proto

package client

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 查询资源列表请求
type STQueryStyleListReq struct {
	QueryBegin       *int32 `protobuf:"zigzag32,1,opt,name=QueryBegin" json:"QueryBegin,omitempty"`
	QueryNum         *int32 `protobuf:"zigzag32,2,opt,name=QueryNum" json:"QueryNum,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *STQueryStyleListReq) Reset()                    { *m = STQueryStyleListReq{} }
func (m *STQueryStyleListReq) String() string            { return proto.CompactTextString(m) }
func (*STQueryStyleListReq) ProtoMessage()               {}
func (*STQueryStyleListReq) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *STQueryStyleListReq) GetQueryBegin() int32 {
	if m != nil && m.QueryBegin != nil {
		return *m.QueryBegin
	}
	return 0
}

func (m *STQueryStyleListReq) GetQueryNum() int32 {
	if m != nil && m.QueryNum != nil {
		return *m.QueryNum
	}
	return 0
}

type STStyleInfo struct {
	StyleID          *int32             `protobuf:"zigzag32,1,opt,name=StyleID" json:"StyleID,omitempty"`
	StyleName        *string            `protobuf:"bytes,2,opt,name=StyleName" json:"StyleName,omitempty"`
	StyleType        *ERecommendTypeDef `protobuf:"varint,3,opt,name=StyleType,enum=client.ERecommendTypeDef" json:"StyleType,omitempty"`
	CreateTime       *int64             `protobuf:"zigzag64,4,opt,name=CreateTime" json:"CreateTime,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *STStyleInfo) Reset()                    { *m = STStyleInfo{} }
func (m *STStyleInfo) String() string            { return proto.CompactTextString(m) }
func (*STStyleInfo) ProtoMessage()               {}
func (*STStyleInfo) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *STStyleInfo) GetStyleID() int32 {
	if m != nil && m.StyleID != nil {
		return *m.StyleID
	}
	return 0
}

func (m *STStyleInfo) GetStyleName() string {
	if m != nil && m.StyleName != nil {
		return *m.StyleName
	}
	return ""
}

func (m *STStyleInfo) GetStyleType() ERecommendTypeDef {
	if m != nil && m.StyleType != nil {
		return *m.StyleType
	}
	return ERecommendTypeDef_BANNER_TYPE
}

func (m *STStyleInfo) GetCreateTime() int64 {
	if m != nil && m.CreateTime != nil {
		return *m.CreateTime
	}
	return 0
}

// 查询资源列表响应
type STQueryStyleListRsp struct {
	StyleList        []*STStyleInfo `protobuf:"bytes,1,rep,name=StyleList" json:"StyleList,omitempty"`
	Total            *int32         `protobuf:"zigzag32,2,opt,name=Total" json:"Total,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *STQueryStyleListRsp) Reset()                    { *m = STQueryStyleListRsp{} }
func (m *STQueryStyleListRsp) String() string            { return proto.CompactTextString(m) }
func (*STQueryStyleListRsp) ProtoMessage()               {}
func (*STQueryStyleListRsp) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *STQueryStyleListRsp) GetStyleList() []*STStyleInfo {
	if m != nil {
		return m.StyleList
	}
	return nil
}

func (m *STQueryStyleListRsp) GetTotal() int32 {
	if m != nil && m.Total != nil {
		return *m.Total
	}
	return 0
}

// 查询相册图片内容请求
type STQueryResourceListReq struct {
	StyleID          *int32 `protobuf:"zigzag32,1,opt,name=StyleID" json:"StyleID,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *STQueryResourceListReq) Reset()                    { *m = STQueryResourceListReq{} }
func (m *STQueryResourceListReq) String() string            { return proto.CompactTextString(m) }
func (*STQueryResourceListReq) ProtoMessage()               {}
func (*STQueryResourceListReq) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *STQueryResourceListReq) GetStyleID() int32 {
	if m != nil && m.StyleID != nil {
		return *m.StyleID
	}
	return 0
}

type STResourceImageInfo struct {
	ImageID          *int32  `protobuf:"zigzag32,1,opt,name=ImageID" json:"ImageID,omitempty"`
	Url              *string `protobuf:"bytes,2,opt,name=Url" json:"Url,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *STResourceImageInfo) Reset()                    { *m = STResourceImageInfo{} }
func (m *STResourceImageInfo) String() string            { return proto.CompactTextString(m) }
func (*STResourceImageInfo) ProtoMessage()               {}
func (*STResourceImageInfo) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *STResourceImageInfo) GetImageID() int32 {
	if m != nil && m.ImageID != nil {
		return *m.ImageID
	}
	return 0
}

func (m *STResourceImageInfo) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

// 查询查询相册图片内容响应
type STQueryResourceListRsp struct {
	UrlList          []*STResourceImageInfo `protobuf:"bytes,1,rep,name=UrlList" json:"UrlList,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *STQueryResourceListRsp) Reset()                    { *m = STQueryResourceListRsp{} }
func (m *STQueryResourceListRsp) String() string            { return proto.CompactTextString(m) }
func (*STQueryResourceListRsp) ProtoMessage()               {}
func (*STQueryResourceListRsp) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *STQueryResourceListRsp) GetUrlList() []*STResourceImageInfo {
	if m != nil {
		return m.UrlList
	}
	return nil
}

// 新建相册请求
type STCreateStyleReq struct {
	StyleName        *string            `protobuf:"bytes,1,opt,name=StyleName" json:"StyleName,omitempty"`
	StyleType        *ERecommendTypeDef `protobuf:"varint,2,opt,name=StyleType,enum=client.ERecommendTypeDef" json:"StyleType,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *STCreateStyleReq) Reset()                    { *m = STCreateStyleReq{} }
func (m *STCreateStyleReq) String() string            { return proto.CompactTextString(m) }
func (*STCreateStyleReq) ProtoMessage()               {}
func (*STCreateStyleReq) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{6} }

func (m *STCreateStyleReq) GetStyleName() string {
	if m != nil && m.StyleName != nil {
		return *m.StyleName
	}
	return ""
}

func (m *STCreateStyleReq) GetStyleType() ERecommendTypeDef {
	if m != nil && m.StyleType != nil {
		return *m.StyleType
	}
	return ERecommendTypeDef_BANNER_TYPE
}

// 新建相册响应
type STCreateStyleRsp struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *STCreateStyleRsp) Reset()                    { *m = STCreateStyleRsp{} }
func (m *STCreateStyleRsp) String() string            { return proto.CompactTextString(m) }
func (*STCreateStyleRsp) ProtoMessage()               {}
func (*STCreateStyleRsp) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{7} }

// 上传图片请求
type STUploadImageReq struct {
	StyleID          *int32  `protobuf:"zigzag32,1,opt,name=StyleID" json:"StyleID,omitempty"`
	Image            *string `protobuf:"bytes,2,opt,name=Image" json:"Image,omitempty"`
	ImageSource      []byte  `protobuf:"bytes,3,opt,name=ImageSource" json:"ImageSource,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *STUploadImageReq) Reset()                    { *m = STUploadImageReq{} }
func (m *STUploadImageReq) String() string            { return proto.CompactTextString(m) }
func (*STUploadImageReq) ProtoMessage()               {}
func (*STUploadImageReq) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{8} }

func (m *STUploadImageReq) GetStyleID() int32 {
	if m != nil && m.StyleID != nil {
		return *m.StyleID
	}
	return 0
}

func (m *STUploadImageReq) GetImage() string {
	if m != nil && m.Image != nil {
		return *m.Image
	}
	return ""
}

func (m *STUploadImageReq) GetImageSource() []byte {
	if m != nil {
		return m.ImageSource
	}
	return nil
}

// 上传图片请求
type STUploadImageRsp struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *STUploadImageRsp) Reset()                    { *m = STUploadImageRsp{} }
func (m *STUploadImageRsp) String() string            { return proto.CompactTextString(m) }
func (*STUploadImageRsp) ProtoMessage()               {}
func (*STUploadImageRsp) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{9} }

// 删除相册请求
type STDeleteStyleReq struct {
	StyleID          *int32 `protobuf:"zigzag32,1,opt,name=StyleID" json:"StyleID,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *STDeleteStyleReq) Reset()                    { *m = STDeleteStyleReq{} }
func (m *STDeleteStyleReq) String() string            { return proto.CompactTextString(m) }
func (*STDeleteStyleReq) ProtoMessage()               {}
func (*STDeleteStyleReq) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{10} }

func (m *STDeleteStyleReq) GetStyleID() int32 {
	if m != nil && m.StyleID != nil {
		return *m.StyleID
	}
	return 0
}

// 删除相册响应
type STDeleteStyleRsp struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *STDeleteStyleRsp) Reset()                    { *m = STDeleteStyleRsp{} }
func (m *STDeleteStyleRsp) String() string            { return proto.CompactTextString(m) }
func (*STDeleteStyleRsp) ProtoMessage()               {}
func (*STDeleteStyleRsp) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{11} }

// 删除图片资源请求
type STDeleteResourceReq struct {
	ImageID          *int32 `protobuf:"zigzag32,1,opt,name=ImageID" json:"ImageID,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *STDeleteResourceReq) Reset()                    { *m = STDeleteResourceReq{} }
func (m *STDeleteResourceReq) String() string            { return proto.CompactTextString(m) }
func (*STDeleteResourceReq) ProtoMessage()               {}
func (*STDeleteResourceReq) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{12} }

func (m *STDeleteResourceReq) GetImageID() int32 {
	if m != nil && m.ImageID != nil {
		return *m.ImageID
	}
	return 0
}

// 删除图片资源响应
type STDeleteResourceRsp struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *STDeleteResourceRsp) Reset()                    { *m = STDeleteResourceRsp{} }
func (m *STDeleteResourceRsp) String() string            { return proto.CompactTextString(m) }
func (*STDeleteResourceRsp) ProtoMessage()               {}
func (*STDeleteResourceRsp) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{13} }

// 编辑相册资源请求
type STUpdateStyleReq struct {
	StyleID          *int32             `protobuf:"zigzag32,1,req,name=StyleID" json:"StyleID,omitempty"`
	StyleName        *string            `protobuf:"bytes,2,opt,name=StyleName" json:"StyleName,omitempty"`
	StyleType        *ERecommendTypeDef `protobuf:"varint,3,opt,name=StyleType,enum=client.ERecommendTypeDef" json:"StyleType,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *STUpdateStyleReq) Reset()                    { *m = STUpdateStyleReq{} }
func (m *STUpdateStyleReq) String() string            { return proto.CompactTextString(m) }
func (*STUpdateStyleReq) ProtoMessage()               {}
func (*STUpdateStyleReq) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{14} }

func (m *STUpdateStyleReq) GetStyleID() int32 {
	if m != nil && m.StyleID != nil {
		return *m.StyleID
	}
	return 0
}

func (m *STUpdateStyleReq) GetStyleName() string {
	if m != nil && m.StyleName != nil {
		return *m.StyleName
	}
	return ""
}

func (m *STUpdateStyleReq) GetStyleType() ERecommendTypeDef {
	if m != nil && m.StyleType != nil {
		return *m.StyleType
	}
	return ERecommendTypeDef_BANNER_TYPE
}

// 编辑相册资源响应
type STUpdateStyleRsp struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *STUpdateStyleRsp) Reset()                    { *m = STUpdateStyleRsp{} }
func (m *STUpdateStyleRsp) String() string            { return proto.CompactTextString(m) }
func (*STUpdateStyleRsp) ProtoMessage()               {}
func (*STUpdateStyleRsp) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{15} }

func init() {
	proto.RegisterType((*STQueryStyleListReq)(nil), "client.STQueryStyleListReq")
	proto.RegisterType((*STStyleInfo)(nil), "client.STStyleInfo")
	proto.RegisterType((*STQueryStyleListRsp)(nil), "client.STQueryStyleListRsp")
	proto.RegisterType((*STQueryResourceListReq)(nil), "client.STQueryResourceListReq")
	proto.RegisterType((*STResourceImageInfo)(nil), "client.STResourceImageInfo")
	proto.RegisterType((*STQueryResourceListRsp)(nil), "client.STQueryResourceListRsp")
	proto.RegisterType((*STCreateStyleReq)(nil), "client.STCreateStyleReq")
	proto.RegisterType((*STCreateStyleRsp)(nil), "client.STCreateStyleRsp")
	proto.RegisterType((*STUploadImageReq)(nil), "client.STUploadImageReq")
	proto.RegisterType((*STUploadImageRsp)(nil), "client.STUploadImageRsp")
	proto.RegisterType((*STDeleteStyleReq)(nil), "client.STDeleteStyleReq")
	proto.RegisterType((*STDeleteStyleRsp)(nil), "client.STDeleteStyleRsp")
	proto.RegisterType((*STDeleteResourceReq)(nil), "client.STDeleteResourceReq")
	proto.RegisterType((*STDeleteResourceRsp)(nil), "client.STDeleteResourceRsp")
	proto.RegisterType((*STUpdateStyleReq)(nil), "client.STUpdateStyleReq")
	proto.RegisterType((*STUpdateStyleRsp)(nil), "client.STUpdateStyleRsp")
}

func init() { proto.RegisterFile("ImageSvr.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 396 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0x4f, 0x4f, 0xea, 0x40,
	0x14, 0xc5, 0x53, 0x78, 0xef, 0xf1, 0x98, 0xbe, 0x87, 0x30, 0xa8, 0xa9, 0xba, 0x69, 0xc6, 0x84,
	0xd4, 0x84, 0xb0, 0xc0, 0xa5, 0x3b, 0x41, 0x0d, 0x09, 0x21, 0x4a, 0xcb, 0x07, 0x68, 0xda, 0x0b,
	0x69, 0xd2, 0xe9, 0x8c, 0x9d, 0x62, 0xc2, 0xb7, 0x37, 0xf3, 0xa7, 0x5a, 0xa0, 0xc6, 0x8d, 0xcb,
	0x39, 0x73, 0xef, 0xb9, 0xe7, 0xfe, 0x66, 0x50, 0x67, 0x46, 0xc3, 0x0d, 0xf8, 0x6f, 0xf9, 0x88,
	0xe7, 0xac, 0x60, 0xf8, 0x4f, 0x94, 0x26, 0x90, 0x15, 0x97, 0xa7, 0x13, 0x46, 0x29, 0xcb, 0x9e,
	0xa5, 0x18, 0xb1, 0x54, 0xdf, 0x92, 0x3b, 0xd4, 0xf7, 0x83, 0x97, 0x2d, 0xe4, 0x3b, 0xbf, 0xd8,
	0xa5, 0x30, 0x4f, 0x44, 0xb1, 0x84, 0x57, 0x8c, 0x11, 0x52, 0xe2, 0x3d, 0x6c, 0x92, 0xcc, 0xb1,
	0x5c, 0xcb, 0xeb, 0xe1, 0x2e, 0xfa, 0xab, 0xb4, 0xc5, 0x96, 0x3a, 0x0d, 0xa9, 0x10, 0x81, 0x6c,
	0x3f, 0x50, 0x7d, 0xb3, 0x6c, 0xcd, 0xf0, 0x09, 0x6a, 0xe9, 0xc3, 0xd4, 0x74, 0xf4, 0x50, 0x5b,
	0x09, 0x8b, 0x90, 0x82, 0x6a, 0x69, 0xe3, 0xa1, 0x91, 0x82, 0x1d, 0x07, 0xa7, 0xe9, 0x5a, 0x5e,
	0x67, 0x7c, 0x31, 0xd2, 0x09, 0x47, 0x0f, 0x4b, 0x88, 0x18, 0xa5, 0x90, 0xc5, 0xf2, 0x76, 0x0a,
	0x6b, 0x19, 0x63, 0x92, 0x43, 0x58, 0x40, 0x90, 0x50, 0x70, 0x7e, 0xb9, 0x96, 0x87, 0xc9, 0xbc,
	0x26, 0xb1, 0xe0, 0x78, 0x60, 0x8c, 0xe5, 0xd9, 0xb1, 0xdc, 0xa6, 0x67, 0x8f, 0xfb, 0xa5, 0x71,
	0x35, 0xe4, 0x7f, 0xf4, 0x3b, 0x60, 0x45, 0x98, 0x9a, 0x15, 0x6e, 0xd0, 0xb9, 0x71, 0x5b, 0x82,
	0x60, 0xdb, 0x3c, 0xfa, 0x40, 0x70, 0xb8, 0x0d, 0xb9, 0x95, 0x83, 0xcb, 0x2a, 0x05, 0xb9, 0xdc,
	0x5a, 0x1f, 0xca, 0xad, 0x6d, 0xd4, 0x5c, 0xe5, 0xda, 0xbf, 0x4d, 0x1e, 0xeb, 0xfd, 0x05, 0xc7,
	0x43, 0xd4, 0x5a, 0xe5, 0x69, 0x25, 0xee, 0xd5, 0x67, 0xdc, 0xa3, 0x29, 0xc4, 0x47, 0x5d, 0x3f,
	0xd0, 0x2c, 0x54, 0x2a, 0x99, 0x70, 0x0f, 0xaf, 0x75, 0x8c, 0xb7, 0xf1, 0x0d, 0x5e, 0x82, 0x0f,
	0x4d, 0x05, 0x27, 0x4f, 0x52, 0x5b, 0xf1, 0x94, 0x85, 0xb1, 0x9a, 0x5e, 0x87, 0x42, 0x42, 0x54,
	0x97, 0xe6, 0x51, 0xfb, 0xc8, 0xd6, 0x9f, 0x4e, 0x85, 0x56, 0xcf, 0xfa, 0x4f, 0x9b, 0x57, 0x8d,
	0x04, 0x27, 0xd7, 0x52, 0x9b, 0x42, 0x0a, 0x95, 0x2d, 0x8e, 0x38, 0xe3, 0xc3, 0x22, 0xc1, 0xc9,
	0x40, 0xb2, 0xd7, 0x5a, 0xc9, 0xc6, 0xf4, 0xee, 0xb1, 0x27, 0x67, 0x35, 0x75, 0x82, 0x93, 0x58,
	0x67, 0x89, 0xc3, 0xaf, 0xe6, 0x36, 0x7e, 0xe0, 0xb7, 0x96, 0x1b, 0xc7, 0x15, 0x9c, 0xef, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x49, 0x66, 0xc5, 0x9b, 0x8e, 0x03, 0x00, 0x00,
}
