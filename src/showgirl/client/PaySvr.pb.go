// Code generated by protoc-gen-go. DO NOT EDIT.
// source: PaySvr.proto

package client

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 创建微信支付订单请求
type STCreateTransactionReq struct {
	GoodsDesc        *string `protobuf:"bytes,1,opt,name=GoodsDesc" json:"GoodsDesc,omitempty"`
	GoodsDetail      *string `protobuf:"bytes,2,opt,name=GoodsDetail" json:"GoodsDetail,omitempty"`
	FeeAmount        *int32  `protobuf:"zigzag32,3,opt,name=FeeAmount" json:"FeeAmount,omitempty"`
	OpenID           *string `protobuf:"bytes,4,opt,name=OpenID" json:"OpenID,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *STCreateTransactionReq) Reset()                    { *m = STCreateTransactionReq{} }
func (m *STCreateTransactionReq) String() string            { return proto.CompactTextString(m) }
func (*STCreateTransactionReq) ProtoMessage()               {}
func (*STCreateTransactionReq) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *STCreateTransactionReq) GetGoodsDesc() string {
	if m != nil && m.GoodsDesc != nil {
		return *m.GoodsDesc
	}
	return ""
}

func (m *STCreateTransactionReq) GetGoodsDetail() string {
	if m != nil && m.GoodsDetail != nil {
		return *m.GoodsDetail
	}
	return ""
}

func (m *STCreateTransactionReq) GetFeeAmount() int32 {
	if m != nil && m.FeeAmount != nil {
		return *m.FeeAmount
	}
	return 0
}

func (m *STCreateTransactionReq) GetOpenID() string {
	if m != nil && m.OpenID != nil {
		return *m.OpenID
	}
	return ""
}

// 创建微信支付订单响应
type STCreateTransactionRsp struct {
	AppId            *string `protobuf:"bytes,1,opt,name=AppId" json:"AppId,omitempty"`
	MchID            *string `protobuf:"bytes,2,opt,name=MchID" json:"MchID,omitempty"`
	DeviceInfo       *string `protobuf:"bytes,3,opt,name=DeviceInfo" json:"DeviceInfo,omitempty"`
	NonceStr         *string `protobuf:"bytes,4,opt,name=NonceStr" json:"NonceStr,omitempty"`
	Sign             *string `protobuf:"bytes,5,opt,name=Sign" json:"Sign,omitempty"`
	ResultCode       *string `protobuf:"bytes,6,opt,name=ResultCode" json:"ResultCode,omitempty"`
	ErrCode          *string `protobuf:"bytes,7,opt,name=ErrCode" json:"ErrCode,omitempty"`
	ErrCodeDes       *string `protobuf:"bytes,8,opt,name=ErrCodeDes" json:"ErrCodeDes,omitempty"`
	TradeType        *string `protobuf:"bytes,9,opt,name=TradeType" json:"TradeType,omitempty"`
	PrepayID         *string `protobuf:"bytes,10,opt,name=PrepayID" json:"PrepayID,omitempty"`
	CurTime          *int64  `protobuf:"zigzag64,11,opt,name=CurTime" json:"CurTime,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *STCreateTransactionRsp) Reset()                    { *m = STCreateTransactionRsp{} }
func (m *STCreateTransactionRsp) String() string            { return proto.CompactTextString(m) }
func (*STCreateTransactionRsp) ProtoMessage()               {}
func (*STCreateTransactionRsp) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *STCreateTransactionRsp) GetAppId() string {
	if m != nil && m.AppId != nil {
		return *m.AppId
	}
	return ""
}

func (m *STCreateTransactionRsp) GetMchID() string {
	if m != nil && m.MchID != nil {
		return *m.MchID
	}
	return ""
}

func (m *STCreateTransactionRsp) GetDeviceInfo() string {
	if m != nil && m.DeviceInfo != nil {
		return *m.DeviceInfo
	}
	return ""
}

func (m *STCreateTransactionRsp) GetNonceStr() string {
	if m != nil && m.NonceStr != nil {
		return *m.NonceStr
	}
	return ""
}

func (m *STCreateTransactionRsp) GetSign() string {
	if m != nil && m.Sign != nil {
		return *m.Sign
	}
	return ""
}

func (m *STCreateTransactionRsp) GetResultCode() string {
	if m != nil && m.ResultCode != nil {
		return *m.ResultCode
	}
	return ""
}

func (m *STCreateTransactionRsp) GetErrCode() string {
	if m != nil && m.ErrCode != nil {
		return *m.ErrCode
	}
	return ""
}

func (m *STCreateTransactionRsp) GetErrCodeDes() string {
	if m != nil && m.ErrCodeDes != nil {
		return *m.ErrCodeDes
	}
	return ""
}

func (m *STCreateTransactionRsp) GetTradeType() string {
	if m != nil && m.TradeType != nil {
		return *m.TradeType
	}
	return ""
}

func (m *STCreateTransactionRsp) GetPrepayID() string {
	if m != nil && m.PrepayID != nil {
		return *m.PrepayID
	}
	return ""
}

func (m *STCreateTransactionRsp) GetCurTime() int64 {
	if m != nil && m.CurTime != nil {
		return *m.CurTime
	}
	return 0
}

func init() {
	proto.RegisterType((*STCreateTransactionReq)(nil), "client.STCreateTransactionReq")
	proto.RegisterType((*STCreateTransactionRsp)(nil), "client.STCreateTransactionRsp")
}

func init() { proto.RegisterFile("PaySvr.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 255 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x8f, 0x41, 0x4e, 0xc3, 0x30,
	0x10, 0x45, 0x15, 0x68, 0xd2, 0x66, 0xda, 0x02, 0x31, 0x12, 0xf2, 0x32, 0xea, 0x2a, 0x2b, 0xee,
	0x50, 0xc5, 0x80, 0xb2, 0x00, 0xaa, 0x26, 0x17, 0xb0, 0x9c, 0x01, 0x2c, 0xa5, 0xb6, 0x19, 0x3b,
	0x95, 0x72, 0x54, 0x6e, 0x83, 0x08, 0xc9, 0xae, 0xdb, 0xa7, 0x3f, 0xef, 0x69, 0x60, 0x73, 0x90,
	0x43, 0x7d, 0xa6, 0x47, 0x47, 0x36, 0x58, 0x96, 0xa8, 0x4e, 0xa3, 0x09, 0x3b, 0x05, 0x0f, 0x75,
	0x53, 0x12, 0xca, 0x80, 0x0d, 0x49, 0xe3, 0xa5, 0x0a, 0xda, 0x9a, 0x23, 0x7e, 0xb3, 0x0c, 0xd2,
	0x17, 0x6b, 0x5b, 0x2f, 0xd0, 0x2b, 0x1e, 0xe5, 0x51, 0x91, 0xb2, 0x7b, 0x58, 0x4f, 0x28, 0x48,
	0xdd, 0xf1, 0xab, 0x11, 0x66, 0x90, 0x3e, 0x23, 0xee, 0x4f, 0xb6, 0x37, 0x81, 0x5f, 0xe7, 0x51,
	0x91, 0xb1, 0x1b, 0x48, 0xde, 0x1d, 0x9a, 0x4a, 0xf0, 0xc5, 0xdf, 0x64, 0xf7, 0x13, 0x5d, 0xae,
	0x78, 0xc7, 0xb6, 0x10, 0xef, 0x9d, 0xab, 0xda, 0xa9, 0xb0, 0x85, 0xf8, 0x55, 0x7d, 0x55, 0x62,
	0x72, 0x33, 0x00, 0x81, 0x67, 0xad, 0xb0, 0x32, 0x1f, 0x76, 0x94, 0xa7, 0xec, 0x0e, 0x56, 0x6f,
	0xd6, 0x28, 0xac, 0x03, 0xfd, 0xeb, 0xd9, 0x06, 0x16, 0xb5, 0xfe, 0x34, 0x3c, 0x9e, 0x6f, 0x8e,
	0xe8, 0xfb, 0x2e, 0x94, 0xb6, 0x45, 0x9e, 0x8c, 0xec, 0x16, 0x96, 0x4f, 0x44, 0x23, 0x58, 0xce,
	0xa3, 0x09, 0x08, 0xf4, 0x7c, 0x35, 0x3f, 0xd2, 0x90, 0x6c, 0xb1, 0x19, 0x1c, 0xf2, 0x74, 0x6e,
	0x1d, 0x08, 0x9d, 0x1c, 0x2a, 0xc1, 0x61, 0x36, 0x95, 0x3d, 0x35, 0xfa, 0x84, 0x7c, 0x9d, 0x47,
	0x05, 0xfb, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x76, 0x87, 0x50, 0x4f, 0x57, 0x01, 0x00, 0x00,
}
